import features
from tqdm import tqdm


def csv_factory(dir, ids, classes, funcList, col_list):

	vals,headeers = funcList[0]

	for x in range(len(funcList)):
		func = funcList[x]
		func_string = str(func_list[x])
		f = open(func_string+".csv", w+)
		headers = "ids[index]" + "," str(classes[index]) + ","
		for col_num in range(col_list[x]):
			headers += "f" + str(col_num) + ","
		headers = headers.rstrip(",") + "\n"
		line = ""
		for index, file in enumerate(os.listdir(dir)):
			line += ids[index] + "," + str(classes[index]) + ","
			vals = func(file)
			for val in vals:
				line += str(val) + ","
			line = line.rstrip(",") + "\n"
			f.write(line)
		f.close()


def main():
	NBEST1COL = 64
	# map a list of [1,2,3, 4] such that ngrams_vals is run on each value
	my_func_one = lambda file: features.ngrams_vals(1, NBEST1COL, file)
	col_list = [1, NBEST1COL]
	func_list = [features.byte_size_vals, my_func_one]
	train_dir = "train"
	test_dir = "test"
	df_train = pd.read_csv("perSysCountsTrain.csv")
	df_test = pd.read_csv("perSysCountsTest.csv")
	Ids_train = df_train.Id.values
	Ids_test = df_test.Id.vlaues
	classes_train = df_train.Class.values
	classes_test = df_test.Class.values
	del df_train,df_test
	csv_factory(train_dir, Ids_train, classes_train, func_list, column_list)

if __name__ == "__main__":
    main()