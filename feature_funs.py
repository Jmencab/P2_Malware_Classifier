import os
import ngram

# function to get byte size per file
def byte_size_vals (datafile, direc, size):
  return [os.path.getsize(direc + "/" + datafile)]

# function to get 1-gram
def gram1_vals (datafile, direc, BST1):
  return ngram.file_vals(1, BST1, datafile, direc, 'tags')

# function to get 2-gram
def gram2_vals (datafile, direc, BST2):
  return ngram.file_vals(2, BST2, datafile, direc, 'tags')

# function to get 3-gram
def gram3_vals (datafile, direc, BST3):
  return ngram.file_vals(3, BST3, datafile, direc, 'tags')

# function to get 4-gram
def gram4_vals (datafile, direc, BST4):
  return ngram.file_vals(4, BST4, datafile, direc, 'tags')

# function to get 1-gram
def gram1_vals_b (datafile, direc, BST1):
  return ngram.file_vals(1, BST1, datafile, direc, 'bytes')

# function to get 2-gram
def gram2_vals_b (datafile, direc, BST2):
  return ngram.file_vals(2, BST2, datafile, direc, 'bytes')

# function to get 3-gram
def gram3_vals_b (datafile, direc, BST3):
  return ngram.file_vals(3, BST3, datafile, direc, 'bytes')

# function to get 4-gram
def gram4_vals_b (datafile, direc, BST4):
  return ngram.file_vals(4, BST4, datafile, direc, 'bytes')

# function to get 1-gram
def gram1_vals_c (datafile, direc, BST1):
  return ngram.file_vals(1, BST1, datafile, direc, 'chars')

# function to get 2-gram
def gram2_vals_c (datafile, direc, BST2):
  return ngram.file_vals(2, BST2, datafile, direc, 'chars')

# function to get 3-gram
def gram3_vals_c (datafile, direc, BST3):
  return ngram.file_vals(3, BST3, datafile, direc, 'chars')

# function to get 4-gram
def gram4_vals_c (datafile, direc, BST4):
  return ngram.file_vals(4, BST4, datafile, direc, 'chars')
